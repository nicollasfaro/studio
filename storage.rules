
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/(default)/documents/users/$(request.auth.uid)) && 
             get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Gallery images can be read by anyone, but only written by admins.
    match /gallery/{fileName} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }

    // Profile images can be read by anyone.
    // A user can only write to their own profile image path.
    match /profile-images/{userId} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Appointment hair reference photos can be written by the user creating the appointment.
    // They can be read by admins to check the reference.
    match /appointments/{fileName} {
      allow read: if isSignedIn() && isAdmin();
      allow write: if isSignedIn(); // Allow any authenticated user to upload a photo for their appointment
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
