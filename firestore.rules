rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funções de Segurança ---
    // Verifica se o usuário autenticado é um administrador.
    function isAdmin() {
      // O usuário deve existir no documento /users/{uid} e ter o campo isAdmin = true.
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Verifica se o usuário está autenticado.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // --- Coleções ---
    
    match /users/{userId} {
      allow read, update, write: if request.auth.uid == userId || isAdmin();
      allow create: if isSignedIn();
      allow list: if isAdmin();
    }

    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /promotions/{promotionId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /appointments/{appointmentId} {
      function isOwner() {
        // Para 'create', o 'resource' é o novo documento a ser criado.
        // Para 'get', 'update', 'delete', 'resource' é o documento existente.
        return request.auth.uid == resource.data.clientId;
      }
      
      // Um admin pode ler qualquer documento individual.
      // Um usuário pode ler seu próprio agendamento.
      allow get: if isAdmin() || (isSignedIn() && exists(/databases/$(database)/documents/appointments/$(appointmentId)) && get(/databases/$(database)/documents/appointments/$(appointmentId)).data.clientId == request.auth.uid);

      // Um admin pode listar todos os agendamentos.
      // Um usuário comum só pode listar agendamentos se a consulta estiver filtrada por seu clientId.
      allow list: if isAdmin() || (isSignedIn() && request.query.where.clientId == request.auth.uid);
      
      allow create: if isOwner();
      allow update, delete: if isAdmin() || (isSignedIn() && exists(/databases/$(database)/documents/appointments/$(appointmentId)) && get(/databases/$(database)/documents/appointments/$(appointmentId)).data.clientId == request.auth.uid);

      // Chat Messages Subcollection
      match /messages/{messageId} {
        function isAppointmentOwner() {
          return get(/databases/$(database)/documents/appointments/$(appointmentId)).data.clientId == request.auth.uid;
        }
        
        allow read: if isAppointmentOwner() || isAdmin();
        allow write: if isAppointmentOwner() || isAdmin();
      }
    }
    
    match /theme/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /socialMedia/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /config/{docId} {
        // A regra 'businessHours' é pública para leitura, mas escrita só para admin.
        // Outros documentos (como 'notifications') são apenas para admin.
        allow read: if docId == 'businessHours' || isAdmin();
        allow write: if isAdmin();
    }

    match /galleryImages/{imageId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /content/{contentId} {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
