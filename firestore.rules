
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Rules for collections ---

    // Users can only read/write their own data. Admins can read/write any user's data.
    match /users/{userId} {
      allow read, write: if isSignedIn() && (request.auth.uid == userId || isAdmin());
    }

    // Services, promotions, theme, social media, gallery, and content are publicly readable. Only admins can write.
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    match /promotions/{promotionId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    match /theme/{docId} {
        allow read: if true;
        allow write: if isSignedIn() && isAdmin();
    }
    match /socialMedia/{docId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    match /galleryImages/{imageId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
     match /content/{contentId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }

    // Config documents have mixed read access, but only admins can write.
    match /config/{docId} {
      // businessHours is public, notifications is admin-only.
      allow read: if docId == 'businessHours' || (docId == 'notifications' && isAdmin());
      allow write: if isSignedIn() && isAdmin();
    }

    // Appointments can be created by any signed-in user.
    // They can be read/updated by their owner or an admin.
    match /appointments/{appointmentId} {
      allow create: if isSignedIn();
      allow get: if isSignedIn() && (resource.data.clientId == request.auth.uid || isAdmin());
      allow list: if isSignedIn() && (request.query.where.clientId == request.auth.uid || isAdmin());
      allow update, delete: if isSignedIn() && (resource.data.clientId == request.auth.uid || isAdmin());

      // Chat messages subcollection rules
      // Only the client of the parent appointment or an admin can read/write messages.
      match /messages/{messageId} {
         allow read, write: if isSignedIn() && (
            get(/databases/$(database)/documents/appointments/$(appointmentId)).data.clientId == request.auth.uid || isAdmin()
         );
      }
    }
  }
}
