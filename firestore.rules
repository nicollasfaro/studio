
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isAppointmentOwner(appointmentId) {
        return isSignedIn() && get(/databases/$(database)/documents/appointments/$(appointmentId)).data.clientId == request.auth.uid;
    }

    // --- User Profiles ---
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) || isAdmin();
    }

    // --- Public Data ---
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /promotions/{promotionId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /galleryImages/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /content/{contentId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /theme/{themeId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /socialMedia/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // --- Config Data ---
    match /config/notifications {
      allow read, write: if isAdmin();
    }
    
    match /config/businessHours {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // --- Appointments & Messages ---
    match /appointments/{appointmentId} {
        // GET: An admin or the owner can get a single appointment.
        allow get: if isAppointmentOwner(appointmentId) || isAdmin();

        // LIST: Admins can list all. Users can only list their own appointments.
        allow list: if request.query.get("clientId") == request.auth.uid || isAdmin();

        // CREATE: Any signed-in user can create an appointment for themselves.
        allow create: if isSignedIn() && request.resource.data.clientId == request.auth.uid;

        // UPDATE, DELETE: Only an admin can update or delete an appointment.
        // A user can update to cancel or respond to a contestation.
        allow update: if isAdmin() || (isAppointmentOwner(appointmentId) && (request.resource.data.status == 'cancelado' || request.resource.data.contestStatus in ['accepted', 'rejected']));
        allow delete: if isAdmin();
        
        // Chat Messages Subcollection
        match /messages/{messageId} {
            allow read, write: if isAppointmentOwner(appointmentId) || isAdmin();
        }
    }
  }
}
